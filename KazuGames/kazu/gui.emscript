bool kazuScoreShown;
bool kazuInfoShown;
bool kazuTitleShown;

void ShowTitle()
{
	if ( kazuTitleShown )
	{
		Overlay_Show( "Title");
	}
}

void HideTitle()
{
	if ( kazuTitleShown )
	{
		Overlay_Hide( "Title");
	}
}

void KazuGuiInit( bool showInGameScore, bool inGameScoreLine1, bool inGameScoreLine2
	, bool showInGameInfo, bool inGameInfoLine1, bool inGameInfoLine2 )
{
	Overlay_Hide( "Commandes" );
	Overlay_Hide( "Regles" );
	Overlay_Hide( "Options" );
	Overlay_Hide( "Scores" );
	Overlay_Hide( "EndGame" );
	Overlay_Hide( "InGame/Menu" );
	Overlay_Hide( "InGame/Score" );
	Overlay_Hide( "InGame/Info" );
	OverlayElement_GetByName( "Menu/Jouer" )->Show();
	OverlayElement_GetByName( "Menu/Continuer" )->Hide();
	OverlayElement_GetByName( "Menu/Recommencer" )->Hide();
	Overlay_Show( "Title" );
	Overlay_Show( "Menu" );
	kazuTitleShown = true;
	kazuInGame = false;
	kazuGameStarted = false;
	kazuScoreShown = showInGameScore;
	kazuInfoShown = showInGameInfo;

	if ( inGameScoreLine1 )
	{
		OverlayElement_GetByName( "InGame/Score/Line1/Title" )->Show();
		OverlayElement_GetByName( "InGame/Score/Line1/Text" )->Show();
	}
	else
	{
		OverlayElement_GetByName( "InGame/Score/Line1/Title" )->Hide();
		OverlayElement_GetByName( "InGame/Score/Line1/Text" )->Hide();
	}

	if ( inGameScoreLine2 )
	{
		OverlayElement_GetByName( "InGame/Score/Line2/Title" )->Show();
		OverlayElement_GetByName( "InGame/Score/Line2/Text" )->Show();
	}
	else
	{
		OverlayElement_GetByName( "InGame/Score/Line2/Title" )->Hide();
		OverlayElement_GetByName( "InGame/Score/Line2/Text" )->Hide();
	}

	if ( inGameInfoLine1 )
	{
		OverlayElement_GetByName( "InGame/Info/Line1/Title" )->Show();
		OverlayElement_GetByName( "InGame/Info/Line1/Text" )->Show();
	}
	else
	{
		OverlayElement_GetByName( "InGame/Info/Line1/Title" )->Hide();
		OverlayElement_GetByName( "InGame/Info/Line1/Text" )->Hide();
	}

	if ( inGameInfoLine2 )
	{
		OverlayElement_GetByName( "InGame/Info/Line2/Title" )->Show();
		OverlayElement_GetByName( "InGame/Info/Line2/Text" )->Show();
	}
	else
	{
		OverlayElement_GetByName( "InGame/Info/Line2/Title" )->Hide();
		OverlayElement_GetByName( "InGame/Info/Line2/Text" )->Hide();
	}
}

void KazuGuiBegin()
{
	Overlay_Hide( "Menu");
	Overlay_Hide( "Title");
	Overlay_Show( "InGame/Menu");

	if ( kazuScoreShown )
	{
		Overlay_Show( "InGame/Score" );
	}

	if ( kazuInfoShown )
	{
		Overlay_Show( "InGame/Info" );
	}

	kazuTitleShown = false;
	kazuGameStarted = true;

	timer( "BeginGame", TIMERTYPE_ONCE, 0.3 )
	{
		kazuInGame = true;
	}
}

void KazuGuiPause()
{
	Timer_PauseAll();
	kazuInGame = false;
	Overlay_Hide( "InGame/Menu");
	Overlay_Hide( "InGame/Score" );
	Overlay_Hide( "InGame/Info" );
	OverlayElement_GetByName( "Menu/Continuer")->Show();
	OverlayElement_GetByName( "Menu/Recommencer")->Hide();
	OverlayElement_GetByName( "Menu/Jouer")->Hide();
	Overlay_Show( "Menu");
}

void KazuGuiResume()
{
	Timer_PlayAll();
	Overlay_Hide( "Menu");
	Overlay_Show( "InGame/Menu");

	if ( kazuScoreShown )
	{
		Overlay_Show( "InGame/Score" );
	}

	if ( kazuInfoShown )
	{
		Overlay_Show( "InGame/Info" );
	}

	timer( "ResumeGame", TIMERTYPE_ONCE, 0.3 )
	{
		kazuInGame = true;
	}
}

void KazuGuiStop()
{
	kazuInGame = false;
	kazuGameStarted = false;
	Overlay_Hide( "InGame/Menu");
	Overlay_Hide( "InGame/Score" );
	Overlay_Hide( "InGame/Info" );
	OverlayElement_GetByName( "Menu/Jouer")->Hide();
	OverlayElement_GetByName( "Menu/Continuer")->Hide();
	OverlayElement_GetByName( "Menu/Recommencer")->Show();
}

void KazuGuiRestart()
{
	KazuGuiStop();
	Timer_KillAll();
	Overlay_Hide( "EndGame" );
	Overlay_Show( "Menu" );
}

void KazuGuiEndNamedGame( string endName )
{
	OverlayElement_GetByName( "EndGame/End" )->Hide();
	OverlayElement_GetByName( "EndGame/Win" )->Hide();
	OverlayElement_GetByName( "EndGame/Lose" )->Hide();
	OverlayElement_GetByName( "EndGame/" + endName )->Show();

	Overlay_Show( "EndGame" );
	Overlay_Hide( "Menu" );
}

void KazuGuiEndGame()
{
	KazuGuiEndNamedGame( "End" );
	timer( "EndGame", TIMERTYPE_ONCE, 10.0 )
	{
		KazuGuiRestart();
	}
}

void KazuGuiWinGame()
{
	KazuGuiEndNamedGame( "Win" );
	timer( "EndGame", TIMERTYPE_ONCE, 10.0 )
	{
		KazuGuiRestart();
	}
}

void KazuGuiLoseGame( bool longTimeout )
{
	if ( longTimeout )
	{
		KazuGuiEndNamedGame( "Lose" );
		timer( "EndGame", TIMERTYPE_ONCE, 10.0 )
		{
			KazuGuiRestart();
		}
	}
	else
	{
		KazuGuiEndNamedGame( "Lose" );
		timer( "EndGame", TIMERTYPE_ONCE, 3.0 )
		{
			KazuGuiRestart();
		}
	}
}

void KazuGuiCleanup()
{
	Timer_KillAll();
	kazuInGame = false;
	kazuGameStarted = false;
	Overlay_Hide( "Commandes");
	Overlay_Hide( "Regles");
	Overlay_Hide( "Options");
	Overlay_Hide( "Scores");
	Overlay_Hide( "InGame/Menu");
	Overlay_Hide( "InGame/Score" );
	Overlay_Hide( "InGame/Info" );
	Overlay_Hide( "Title" );
	Overlay_Hide( "Menu" );
	Overlay_Show( "Splash/GamesList" );
}

Overlay_SetAction( "Menu/Commandes")
{
	HideTitle();
	Overlay_Show( "Commandes");
	Overlay_Hide( "Menu");
}

Overlay_SetAction( "Commandes/Retour")
{
	ShowTitle();
	Overlay_Hide( "Commandes");
	Overlay_Show( "Menu");
}

Overlay_SetAction( "Menu/Regles")
{
	HideTitle();
	Overlay_Show( "Regles");
	Overlay_Hide( "Menu");
}

Overlay_SetAction( "Regles/Retour")
{
	ShowTitle();
	Overlay_Hide( "Regles");
	Overlay_Show( "Menu");
}

Overlay_SetAction( "Scores/Retour")
{
	ShowTitle();
	Overlay_Hide( "Scores");
	Overlay_Show( "Menu");
}

Overlay_SetAction( "Menu/Options")
{
	HideTitle();
	Overlay_Show( "Options");
	Overlay_Hide( "Menu");
}

Overlay_SetAction( "Menu/Retour")
{
	KazuGuiCleanup();
}

Overlay_SetAction( "Options/Retour")
{
	ShowTitle();
	Overlay_Hide( "Options");
	Overlay_Show( "Menu");
}

Overlay_SetAction( "GamesList/Retour")
{
	ShowTitle();
	Overlay_Hide( "Splash/GamesList");
	Overlay_Show( "Menu");
}

Overlay_SetAction( "Options/MusicOnOff")
{
	l_music = ( ! l_music);
	Sound_MuteMusic( l_music);

	if ( ! l_music)
	{
		OverlayElement_GetByName( "Options/MusicOnOff")->SetMaterial( "On");
	}
	else
	{
		OverlayElement_GetByName( "Options/MusicOnOff")->SetMaterial( "Off");
	}
}

Overlay_SetAction( "Options/SoundOnOff")
{
	l_sound = ( ! l_sound);
	Sound_MuteSFX( l_sound);

	if ( ! l_sound)
	{
		OverlayElement_GetByName( "Options/SoundOnOff")->SetMaterial( "On");
	}
	else
	{
		OverlayElement_GetByName( "Options/SoundOnOff")->SetMaterial( "Off");
	}
}

void TimerMusic()
{
	timer( "MusicChangeVolume", TIMERTYPE_PERMANENT, 0.0)
	{
		Echo( "TimerMusic");
		l_ticPos = MOUSE_POSITION_X - l_ticMusic->GetAbsoluteLeft();
		l_ticMusic->Translate( l_ticPos, 0.0);

		l_ticMusic->LimitToParent();

		l_musicVol = l_ticMusic->GetLeft() / l_relativeRegletteWidth;

		Sound_SetMusicVolume( l_musicVol);
	}
}

void TimerSound()
{
	timer( "SoundChangeVolume", TIMERTYPE_PERMANENT, 0.0)
	{
		Echo( "TimerSound");
		l_ticPos = MOUSE_POSITION_X - l_ticSound->GetAbsoluteLeft();
		l_ticSound->Translate( l_ticPos, 0.0);

		l_ticSound->LimitToParent();

		l_soundVol = l_ticSound->GetLeft() / l_relativeRegletteWidth;

		Sound_SetSFXVolume( l_soundVol);
	}
}

Overlay_SetAction( "Options/RegletteMusic")
{
	TimerMusic();
}

Overlay_SetAction( "Options/TicMusic")
{
	TimerMusic();
}

Overlay_SetAction( "Options/RegletteSound")
{
	TimerSound();
}

Overlay_SetAction( "Options/TicSound")
{
	TimerSound();
}
