string l_return;
string l_infos;
string l_caption;
string l_stringnum;
string c_highscorePage;

bool kazuGameStarted;
bool kazuInGame;
bool g_clearToGo;
bool g_fucked;

string c_baseSite;
string c_gameName;
string c_prvSceneName;
string c_curSceneName;

int l_index;
string l_names;
string l_muses;
string l_name;
string l_muse;
overlay l_gameOverlay;
vector3 l_gameOverlayPosition;

bool l_titleShown = true;
bool l_music = true;
bool l_sound = true;

real l_relativeRegletteWidth;
real l_ticPos;
real l_musicVol;
real l_soundVol;

overlay l_ticMusic;
overlay l_ticSound;

void KazuPlayGame()
{
	Echo( "KazuPlayGame");
	l_infos = StringFromUrl( c_baseSite + "/connection_game.php?action=confirm&gamename=" + c_gameName, "");
	ExecuteJavaScript( "RefreshCredits();");
}

void LaunchGame()
{
	Echo( "LaunchGame" );
	KazuPlayGame();
	Overlay_Hide( "Splash/GamesList" );
	Overlay_Hide( "Splash/Kazu" );
	OverlayElement_GetByName( "GamesList/Retour" )->Show();

	if ( c_prvSceneName != "" )
	{
		Sound_Stop_All();
		Timer_KillAll();
		ClearScene();
		Scene_Unload( c_prvSceneName );
	}

	Scene_Load( c_curSceneName );
	c_prvSceneName = c_curSceneName;
}

void CheckClearToGo()
{
	Echo( "CheckClearToGo");
	g_clearToGo = false;
	g_fucked = false;
	l_infos = StringFromUrl( c_baseSite + "/connection_game.php?action=info", "");
	
	if (l_infos == "tech error")
	{
		g_clearToGo = true;
		g_fucked = true;
	}
	elseif (strFind(l_infos, "<br>") != -1)
	{
		l_index = strFind( l_infos, "<br>");
		l_names = substr( l_infos, 0, l_index);
		l_muses = substr( l_infos, l_index + 4, strlen( l_infos));
		l_name = strSplitOne( l_names, "|");
		l_muse = strSplitOne( l_muses, "|");
		l_gameOverlayPosition = SetVector3( 20.0, 20.0, 104.0 );

		while (l_muse != "" && l_name != "")
		{
			l_name = strSplitOne( l_names, "|");
			l_muse = strSplitOne( l_muses, "|");

			if (l_muse != "" || l_name != "")
			{
				if ( !OverlayElement_Exists( "GamePanel/" + l_muse ) )
				{
					l_gameOverlay = OverlayElement_Create("GamePanel/" + l_muse, "MinigameNamePanel", "GamesList/Games");
					l_gameOverlay->SetPosition( l_gameOverlayPosition );
					l_gameOverlay->SetMouseOverMaterial( "Base/LowAlphaBrightGrey" );
					l_gameOverlay = OverlayElement_Create("Game/" + l_muse, "MinigameName", "GamePanel/" + l_muse);
					l_gameOverlay->SetCaption( l_name );
					l_gameOverlay->SetFontSize( 25.0 );
					Overlay_SetAction( "GamePanel/" + l_muse )
					{
						l_gameOverlay = OverlayElement_MousePickup( MOUSE_POSITION_X, MOUSE_POSITION_Y );
						l_muse = l_gameOverlay->GetName();
						l_muse = l_muse->replace( "Panel", "" );
						l_gameOverlay = OverlayElement_GetByName( l_muse );
						l_muse = l_gameOverlay->GetName();

						if ( l_muse->find( "Game/" ) == 0 )
						{
							l_name = l_gameOverlay->GetCaption();
							l_muse = l_muse->replace( "Game/", "" );
							c_curSceneName = l_name;

							if ( Muse_IsDownloaded( l_muse ) )
							{
								LaunchGame();
							}
							else
							{
								Muse_DownloadSeparate( l_muse, LaunchGame() );
							}
						}
					}
					l_gameOverlayPosition += SetVector3( 0.0, 25.0, 0.0 );
				}
			}
		}

		if (l_muse != "" || l_name != "")
		{
			g_clearToGo = true;
			g_fucked = true;
		}
	}
	else
	{
		g_clearToGo = true;
		g_fucked = true;
	}
}

void InitialiseKazuSplash()
{
	Echo( "InitialiseKazuSplash");
	Overlay_Hide( "Commandes");
	Overlay_Hide( "EndGame");
	Overlay_Hide( "Menu");
	Overlay_Hide( "Options");
	Overlay_Hide( "Regles");
	Overlay_Hide( "Title");
	Overlay_Hide( "InGame/Menu" );
	Overlay_Hide( "InGame/Score" );
	Overlay_Hide( "InGame/Info" );
	OverlayElement_GetByName( "GamesList/Retour" )->Hide();

	l_musicVol = 1.0;
	l_soundVol = 1.0;
	l_ticPos = 1.0;
	l_ticMusic = OverlayElement_GetByName( "Options/TicMusic");
	l_ticSound = OverlayElement_GetByName( "Options/TicSound");
	l_relativeRegletteWidth = OverlayElement_GetByName( "Options/RegletteMusic")->GetWidth() - l_ticMusic->GetWidth();

	CheckClearToGo();

	if (g_clearToGo)
	{
		c_highscorePage = c_baseSite + "/score.php";
	}
}

InitialiseKazuSplash();
